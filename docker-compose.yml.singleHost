version: '3.8'

services:
  mongo:
    image: mongo:7
    deploy:
      replicas: 1
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    command: mongod --bind_ip_all

  redis:
    image: redis:7.2
    deploy:
      replicas: 1
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    command: redis-server --bind 0.0.0.0 --appendonly yes # enable persistence using AOF

  dashboard:
    build:
      dockerfile: Dockerfile.dashboard
    deploy:
      replicas: 1
    ports:
      - 8080:8080
    volumes:
      - processor_data_nfs:/usr/src/app/processor-common-folder
    environment:
      # - DEBUG=http,express:*
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=8080
      - SHARED_FOLDER=processor-common-folder # path from app
    command: npm start

  evaluator:
    build:
      dockerfile: Dockerfile.evaluator
    deploy:
      replicas: 1
    volumes:
      - processor_data_nfs:/app/processor-common-folder
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_JOB_NOTIFY_CHANNEL=REDIS_JOB_NOTIFY_CHANNEL
      - SHARED_FOLDER=processor-common-folder # path from app
      - SYSTEM_HOSTNAME="{{.Node.Hostname}}" # this is the hostname of the node the container is running on
volumes:
  processor_data_nfs:
    driver: local
  redis-data:
    driver: local # this is a local volume, not on NFS
  mongo-data:
    driver: local # this is a local volume, not on NFS
